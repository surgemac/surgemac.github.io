<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://surgemac.github.io/news/article-102909.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>一文看懂HBase倒序分页查询（实现分页跳转）</title>
        <meta name="description" content="HBase倒序分页查询    HBase分页方式 Hbase倒序查询 HBase分页思想 HBase分页具体代码   POM文件 java类        HBase分页方式 HBase分页查询常见的" />
        <link rel="icon" href="/assets/website/img/surgemac/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Surge Mac免费节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://surgemac.github.io/news/article-102909.htm" />
    <meta property="og:site_name" content="Surge Mac免费节点分享站" />
    <meta property="og:title" content="一文看懂HBase倒序分页查询（实现分页跳转）" />
    <meta property="og:image" content="https://surgemac.github.io/uploads/20240731-2/982c193af433c470af7ab6e5f233f977.webp" />
        <meta property="og:release_date" content="2025-04-24T09:16:29" />
    <meta property="og:updated_time" content="2025-04-24T09:16:29" />
        <meta property="og:description" content="HBase倒序分页查询    HBase分页方式 Hbase倒序查询 HBase分页思想 HBase分页具体代码   POM文件 java类        HBase分页方式 HBase分页查询常见的" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="一文看懂HBase倒序分页查询（实现分页跳转）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/surgemac/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/main.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/reset.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/responsive.css" />
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BJBH6WP5S9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BJBH6WP5S9');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lte IE 9]>
      <p class="browserupgrade">
        You are using an <strong>outdated</strong> browser. Please
        <a href="https://browsehappy.com/">upgrade your browser</a> to improve
        your experience and security.
      </p>
    <![endif]-->
    <!-- Preloader -->
    <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- ========================= header start ========================= -->
    <header class="header navbar-area">

        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                            <span>Surge Mac</span>
                                                        </a>
                            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/client.htm">客户端</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div> <!-- navbar collapse -->
                        </nav> <!-- navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- ========================= header end ========================= -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs" data-stellar-background-ratio="0.5">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-12">
                    <div class="breadcrumbs-content left">
                        <h1 class="page-title">一文看懂HBase倒序分页查询（实现分页跳转）</h1>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-12">
                    <div class="breadcrumbs-content right">
                        <ul class="breadcrumb-nav">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
        <!-- Start Features Area -->
    <section class="Features section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Surge Node节点订阅站" data-url="https://surgenode.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="markdown_views prism-dracula"> <div class="toc"> <h3>HBase倒序分页查询</h3> <ul> <li> <ul> <li>HBase分页方式</li> <li>Hbase倒序查询</li> <li>HBase分页思想</li> <li>HBase分页具体代码</li> <li> <ul> <li>POM文件</li> <li>java类</li> </ul> </li> </ul> </li> </ul> </div> <h2> HBase分页方式</h2> <p>HBase分页查询常见的方式有两种，一种是只能点击下一页上一页，不支持跳转到某一页，而另一种则是可以点击上一页下一页，同时也可以选择跳转到某个指定的页面。我们这篇完成的例子是第二种分页方式，可跳转到某个页面。</p> <h2> Hbase倒序查询</h2> <p>Hbase实现倒序查询非常简单，只需将扫描器设置为倒序扫描即可。</p> <pre><code class="prism language-java"><span class="token comment">// 设置倒序扫描(倒序查询的关键)</span> scan<span class="token punctuation">.</span><span class="token function">setReversed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> HBase分页思想</h2> <p>HBase分页的核心思想就是结合<code>rowkey比较过滤器(RowFilter)</code>和<code>分页过滤器 (PageFilter)</code>进行查询</p> <blockquote> <ul> <li> <p><strong>分页过滤器 (PageFilter)</strong></p> <p>使用这个过滤器可以实现对结果按行进行分页，在创建PageFilter实例的时候需要传入每页的行数。</p> </li> <li> <p><strong>RowKey比较过滤器(RowFilter)</strong></p> <p>使用这个过滤器可以实现对查询数据根据rowkey进行比较，比较的规则和比较的rowkey在创建RowFilter实例时传入。</p> </li> </ul> </blockquote> <p>首先我们需要配置PageFilter，设置我们每一页需要查询的条数</p> <pre><code class="prism language-java"><span class="token comment">// 设置查询条数</span> PageFilter pageFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageFilter</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>配置完了分页过滤器之后，我们需要创建一个RowFilter</p> <pre><code class="prism language-java"><span class="token comment">// 创建RowFilter</span> RowFilter rowFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span>CompareFilter<span class="token punctuation">.</span>CompareOp<span class="token punctuation">.</span>LESS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span>Bytes<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>在创建RowFilter我们传入了两个参数：<br /> 第一个参数是比较运算符<code>CompareFilter.CompareOp.LESS</code>表示<code>小于</code>；</p> <p>第二个参数是比较器<code>new BinaryComparator(Bytes.toBytes(startRowKey))</code>表示使用<code>Bytes.compareTo(byte []，byte [])</code>按字典序进行比较。</p> <p>所以到这里就能明白，上面创建的rowFilter代表的含义，即使用<code>Bytes.compareTo(byte []，byte [])</code>方式按照字典顺序获取数据中<code>rowkey</code>比<code>startRowKey</code>小的数据。</p> <blockquote> <p>这里为什么使用小于呢，因为我们本篇使用的是倒序查询。比较运算符和比较器需要结合实际的需求来决定，而不是固定的</p> </blockquote> <h2> HBase分页具体代码</h2> <h3> POM文件</h3> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hbase-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hbase-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hbase-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> </code></pre> <h3> java类</h3> <pre><code class="prism language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>xiaoming<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>hbase<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>HBaseConfiguration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>TableName<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>client<span class="token punctuation">.</span>*<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>filter<span class="token punctuation">.</span>*<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>hbase<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Bytes<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span>  <span class="token comment">/**  * Hbase工具类  *  * @author xiaoming  * @date 2020-05-26 19:37  **/</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HbaseUtils</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token keyword">static</span> Logger logger <span class="token operator">=</span> Logger<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>HbaseUtils<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token keyword">static</span> HbaseUtils hbaseUtils<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Configuration configuration<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection connection<span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token function">HbaseUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             configuration <span class="token operator">=</span> HBaseConfiguration<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.quorum"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1,127.0.0.2,127.0.0.3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.property.clientPort"</span><span class="token punctuation">,</span> <span class="token string">"2181"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"zookeeper.znode.parent"</span><span class="token punctuation">,</span> <span class="token string">"/hbase-unsecure"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             configuration<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token string">"zookeeper_timeout"</span><span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                 connection <span class="token operator">=</span> ConnectionFactory<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> HbaseUtils <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>hbaseUtils <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>HbaseUtils<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>hbaseUtils <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     hbaseUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HbaseUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     hbaseUtils<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> hbaseUtils<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 功能描述: 获取分页数据      *      * @param tableName   表名      * @param currentPage 当前页码      * @param pageSize    每页条数      * @return java.lang.String      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">private</span> ResultScanner <span class="token function">queryDataByPage</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> <span class="token keyword">int</span> currentPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 第一次查询时startRowKey为null</span>         String startRowKey <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token comment">// 从第一页开始查询每页的数据</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">// 根据每一次传入的rowkey, 查询出排列顺序小于该 rowkey 的 pageSize 条数据, 则最后一页(currentPage)的数据就是最后一次查询的结果</span>             results <span class="token operator">=</span> <span class="token function">queryData</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> startRowKey<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>             Iterator<span class="token generics function"><span class="token punctuation">&lt;</span>Result<span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token comment">// 将每一页的最后一条数据做为下一页查询的起始行(不包含该条数据)</span>                 startRowKey <span class="token operator">=</span> Bytes<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 功能描述: 查询数据      *      * @param tableName   表名      * @param startRowKey 每页起始rowkey      * @param pageSize    每页条数      * @return org.apache.hadoop.hbase.client.ResultScanner      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">public</span> ResultScanner <span class="token function">queryData</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> String startRowKey<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HTable table <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>          Scan scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置倒序扫描(倒序查询的关键)</span>         scan<span class="token punctuation">.</span><span class="token function">setReversed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// MUST_PASS_ALL 表示需要满足过滤器集合中的所有的filter</span>         FilterList filterList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterList</span><span class="token punctuation">(</span>FilterList<span class="token punctuation">.</span>Operator<span class="token punctuation">.</span>MUST_PASS_ALL<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置查询条数</span>         PageFilter pageFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageFilter</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>pageFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 如果查询到了 startRowKey, 则过滤比 startRowKey 大的值</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             RowFilter rowFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span>CompareFilter<span class="token punctuation">.</span>CompareOp<span class="token punctuation">.</span>LESS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span>Bytes<span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>startRowKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>rowFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         scan<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>filterList<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             table <span class="token operator">=</span> <span class="token punctuation">(</span>HTable<span class="token punctuation">)</span> connection<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span>TableName<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             results <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getScanner</span><span class="token punctuation">(</span>scan<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                     table<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>分页倒序查询到这里就完成了，并且已经实现了可以跳转，但是由于采用的是<code>遍历</code>的方式，如果查看页数过大，可能会存在性能上的问题，但是如果数据量不大，或者只需查看比较前的页码数据，这个方法还是很不错的，比较hbase的速度非常的快。或者说可以采用上面说的分页的第一种方式，将每一次查询的startRowkey保存起来，只进行上一页下一页的操作。</p> <blockquote> <p>由于我自己的电脑上面没有安装HBase，所以上面的代码没有在本地测试过，如果有问题，可以评论告诉一下我，我会尽快修改并答复的。Thank you~</p> </blockquote> <p><strong>补充</strong><br /> 代码验证过了，可以运行，但是需要修改一处地方，需要在每次获取startRowKey的地方加上一个判断，代码如下：</p> <pre><code class="prism language-java">    <span class="token comment">/**      * 功能描述: 获取分页数据      *      * @param tableName   表名      * @param currentPage 当前页码      * @param pageSize    每页条数      * @return java.lang.String      * @author xiaoming      * @date 2020-5-26      */</span>     <span class="token keyword">private</span> ResultScanner <span class="token function">queryDataByPage</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">,</span> <span class="token keyword">int</span> currentPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// 第一次查询时startRowKey为null</span>         String startRowKey <span class="token operator">=</span> null<span class="token punctuation">;</span>         ResultScanner results <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token comment">// 从第一页开始查询每页的数据</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentPage<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">// 根据每一次传入的rowkey, 查询出排列顺序小于该 rowkey 的 pageSize 条数据, 则最后一页(currentPage)的数据就是最后一次查询的结果</span>             results <span class="token operator">=</span> <span class="token function">queryData</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> startRowKey<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> currentPage <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             	Iterator<span class="token generics function"><span class="token punctuation">&lt;</span>Result<span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             	<span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 	<span class="token comment">// 将每一页的最后一条数据做为下一页查询的起始行(不包含该条数据)</span>                 	startRowKey <span class="token operator">=</span> Bytes<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             	<span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> results<span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-102907.htm">win11系统网络发现已关闭怎么办</a></p>
                                        <p>下一个：<a href="/news/article-103685.htm">【青岛宠物店|青岛宠物服务信息】（青岛 宠物）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-91768.htm" title="动物疫苗多少钱一支啊图片大全集（动物疫苗法最新消息2019）">动物疫苗多少钱一支啊图片大全集（动物疫苗法最新消息2019）</a></li>
                        <li class="py-2"><a href="/news/article-73451.htm" title="动物疫苗价格排行（动物疫苗有哪些大厂家）">动物疫苗价格排行（动物疫苗有哪些大厂家）</a></li>
                        <li class="py-2"><a href="/news/article-86620.htm" title="广州宠物领养平台电话（广州宠物狗领养网站）">广州宠物领养平台电话（广州宠物狗领养网站）</a></li>
                        <li class="py-2"><a href="/news/article-89524.htm" title="从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）">从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-node-share-links.htm" title="4月4日 | Surge Mac每天更新22.6M/S免费节点订阅链接">4月4日 | Surge Mac每天更新22.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-100702.htm" title="被猫抓了一下红色划痕没出血没破皮（被猫抓了一下有点红没破皮）">被猫抓了一下红色划痕没出血没破皮（被猫抓了一下有点红没破皮）</a></li>
                        <li class="py-2"><a href="/news/article-85913.htm" title="Spring boot+LogBack+MDC实现链路追踪">Spring boot+LogBack+MDC实现链路追踪</a></li>
                        <li class="py-2"><a href="/news/article-72794.htm" title="netty依赖精简">netty依赖精简</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-latest-surge-node.htm" title="3月11日 | Surge Mac每天更新18.8M/S免费节点订阅链接">3月11日 | Surge Mac每天更新18.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-71466.htm" title="厦门市宠物领养中心 厦门市宠物领养中心地址">厦门市宠物领养中心 厦门市宠物领养中心地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- End Features Area -->
        <!-- Start Footer Area -->
    <footer class="footer">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p>Surge Mac免费节点分享站 版权所有 Powered by WordPress</p>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top btn-hover">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/surgemac/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/wow.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/surgemac/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/main.js"></script>
    <script type="text/javascript">
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });

    //====== Clients Logo Slider
    tns({
        container: '.client-logo-carousel',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 15,
        nav: false,
        controls: false,
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 2,
            },
            768: {
                items: 3,
            },
            992: {
                items: 4,
            },
            1170: {
                items: 6,
            }
        }
    });

    //======== Home Slider
    var slider = new tns({
        container: '.home-slider',
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: true,
        controls: false,
        controlsText: [
            '<i class="lni lni-arrow-left prev"></i>',
            '<i class="lni lni-arrow-right next"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });

    //======== Testimonial Slider
    var slider = new tns({
        container: '.testimonial-slider',
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: true,
        controls: false,
        controlsText: [
            '<i class="lni lni-arrow-left prev"></i>',
            '<i class="lni lni-arrow-right next"></i>'
        ],
        responsive: {
            1200: {
                items: 2,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });

    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>