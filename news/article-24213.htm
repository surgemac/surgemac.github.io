<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://surgemac.github.io/news/article-24213.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用</title>
        <meta name="description" content="思路浅析 　　在我们分享的 Azure Terraform 系列文中有介绍到关于 Terraform 的状态文件远程存储的问题，我们在&nbsp; Azure DevOps Pipeline 的 Ta" />
        <link rel="icon" href="/assets/website/img/surgemac/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/surgemac/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/main.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/reset.css" />
    <link rel="stylesheet" href="/assets/website/css/surgemac/responsive.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BJBH6WP5S9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BJBH6WP5S9');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lte IE 9]>
      <p class="browserupgrade">
        You are using an <strong>outdated</strong> browser. Please
        <a href="https://browsehappy.com/">upgrade your browser</a> to improve
        your experience and security.
      </p>
    <![endif]-->
    <!-- Preloader -->
    <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- ========================= header start ========================= -->
    <header class="header navbar-area">

        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <nav class="navbar navbar-expand-lg">
                                                        <a class="navbar-brand" href="/">
                                Surge Mac
                            </a>
                                                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a class="page-scroll" href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div> <!-- navbar collapse -->
                        </nav> <!-- navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- ========================= header end ========================= -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs" data-stellar-background-ratio="0.5">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-12">
                    <div class="breadcrumbs-content left">
                        <h1 class="page-title">Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用</h1>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-12">
                    <div class="breadcrumbs-content right">
                        <ul class="breadcrumb-nav">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
        <!-- Start Features Area -->
    <section class="Features section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Surge Node节点订阅站" data-url="https://surgenode.github.io">
                  				  				  				<h3>思路浅析</h3> <p>　　在我们分享的 Azure Terraform 系列文中有介绍到关于 Terraform 的状态文件远程存储的问题，我们在&nbsp; Azure DevOps Pipeline 的 Task Job 加&nbsp;azure_cli_script 执行内联脚本（该脚本帮我们创建好 Terraform 状态文件存储所需要的 Azure Resource Group、 Azure Storage Account、Azure KeyVault 等资源）。大家需要注意的是，内联脚本中有使用动态变量，该变量临时存储 Azure Storage Account 的 Account Key，如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/638e3c1577944b4483be10d11d53087e.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <p>本篇文章，我继续带领大家分析如何在 Azure DevOps Pipeline 运行中创建使用动态临时变量，使用动态临时变量替换 Azure Pipeline 管道变量。</p> <p><strong>项目整体架构图</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a30a11eebdd0c4b137635312dd660877.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <h3>Pipeline 变量定义、输出</h3> <p>在此阶段，我们需要利用&nbsp;azure_cli_script 任务，创建动态临时变量，输出参数，其中最主要的是将动态临时变量输出，Task yaml 如下所示</p> <p><strong>输出的变量用于同一个 stage，不同 job</strong></p> <div class="cnblogs_code"> <pre>-<span style="color: rgba(0, 0, 0, 1)"> stage: script   jobs:</span>-<span style="color: rgba(0, 0, 0, 1)"> job: azure_cli_script      steps:</span>- task: AzureCLI@<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">         displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Azure CLI :Create Storage Account，Key Vault And Set KeyVault Secret</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">         name: 'output_variable'</span></strong><span style="color: rgba(0, 0, 0, 1)">         inputs:           azureSubscription:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Microsoft Azure Subscription(xxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           scriptType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">bash</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">           addSpnToEnvironment: true</span></strong><span style="color: rgba(0, 0, 0, 1)">           scriptLocation:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inlineScript</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inlineScript:</span>|<span style="color: rgba(0, 0, 0, 1)">               # create azure resource group               az group create</span>--location eastasia --<span style="color: rgba(0, 0, 0, 1)">name $(terraform_rg)                      # create azure storage account               az storage account create</span>--name $(storage_account) --resource-group $(terraform_rg) --location eastasia --<span style="color: rgba(0, 0, 0, 1)">sku Standard_LRS                      # create storage account container</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> tf state                az storage container create</span>--name $(storage_account_container) --account-<span style="color: rgba(0, 0, 0, 1)">name $(storage_account)                      # query storage key and set variable<strong><span style="color: rgba(255, 0, 0, 1)">ACCOUNT_KEY</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">=$(az storage account keys list --resource-group $(terraform_rg) --account-name $(storage_account) --query "[?keyName == 'key1'][value]" --</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">output tsv)</span></strong>                      # create azure keyvault               az keyvault create</span>--name $(keyvault) --resource-group $(terraform_rg) --location eastasia --enable-soft-delete<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">                      # set keyvault secret,secret value is ACCOUNT_KEY               az keyvault secret set</span>--name $(keyvault_sc) --vault-name $(keyvault)  --<span style="color: rgba(0, 0, 0, 1)">value $ACCOUNT_KEY                # set secret varivale and add to environment</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "##vso[task.setvariable variable=ACCOUNT_KEY;isOutput=true]$ACCOUNT_KEY"</span></strong><span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">##vso[task.setvariable variable=ACCOUNT_KEY;issecret=true;isOutput=true]$ACCOUNT_KEY</span><span style="color: rgba(128, 0, 0, 1)">"</span>            -<span style="color: rgba(0, 0, 0, 1)"> job: same_stage_echo<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: azure_cli_script      variables:        ACCOUNT_KEY: $[dependencies.azure_cli_script.outputs[</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">'output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>      steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">          displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in different jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">          inputs:            targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">            script:</span>|<span style="color: rgba(0, 0, 0, 1)">              #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p><strong>输出变量用于不同&nbsp;stage</strong></p> <div class="cnblogs_code"> <pre>-<span style="color: rgba(0, 0, 0, 1)"> stage: echo_varibale<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: script   jobs:</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">- job: different_stage_echo       variables:         ACCOUNT_KEY: $[stageDependencies.script.azure_cli_script.outputs['output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>       steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">           displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in same jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inputs:             targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">             script:</span>|<span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p>以下为完整的&nbsp; &nbsp;azure-pipelines-1.yaml</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># Starter pipeline # Start with a minimal pipeline that you can customize to build and deploy your code. # Add steps that build, run tests, deploy, and</span><span style="color: rgba(0, 0, 255, 1)">more</span><span style="color: rgba(0, 0, 0, 1)">: # https:</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">aka.ms/yaml</span><span style="color: rgba(0, 0, 0, 1)"> trigger:</span>-<span style="color: rgba(0, 0, 0, 1)"> remote_stats  pool:   vmImage: ubuntu</span>-<span style="color: rgba(0, 0, 0, 1)">latest  stages:</span>-<span style="color: rgba(0, 0, 0, 1)"> stage: script   jobs:</span>-<span style="color: rgba(0, 0, 0, 1)"> job: azure_cli_script      steps:</span>- task: AzureCLI@<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">         displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Azure CLI :Create Storage Account，Key Vault And Set KeyVault Secret</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">         name: 'output_variable'</span></strong><span style="color: rgba(0, 0, 0, 1)">         inputs:           azureSubscription:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Microsoft Azure Subscription(xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx)</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           scriptType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">bash</span><span style="color: rgba(128, 0, 0, 1)">'</span><strong><span style="color: rgba(255, 0, 0, 1)">           addSpnToEnvironment: true</span></strong><span style="color: rgba(0, 0, 0, 1)">           scriptLocation:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inlineScript</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inlineScript:</span>|<span style="color: rgba(0, 0, 0, 1)">               # create azure resource group               az group create</span>--location eastasia --<span style="color: rgba(0, 0, 0, 1)">name $(terraform_rg)                      # create azure storage account               az storage account create</span>--name $(storage_account) --resource-group $(terraform_rg) --location eastasia --<span style="color: rgba(0, 0, 0, 1)">sku Standard_LRS                      # create storage account container</span><span style="color: rgba(0, 0, 255, 1)">for</span><span style="color: rgba(0, 0, 0, 1)"> tf state                az storage container create</span>--name $(storage_account_container) --account-<span style="color: rgba(0, 0, 0, 1)">name $(storage_account)                      # query storage key and set variable<strong><span style="color: rgba(255, 0, 0, 1)">ACCOUNT_KEY</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">=$(az storage account keys list --resource-group $(terraform_rg) --account-name $(storage_account) --query "[?keyName == 'key1'][value]" --</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">output tsv)</span></strong>                      # create azure keyvault               az keyvault create</span>--name $(keyvault) --resource-group $(terraform_rg) --location eastasia --enable-soft-delete<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">                      # set keyvault secret,secret value is ACCOUNT_KEY               az keyvault secret set</span>--name $(keyvault_sc) --vault-name $(keyvault)  --<span style="color: rgba(0, 0, 0, 1)">value $ACCOUNT_KEY                # set secret varivale and add to environment</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "##vso[task.setvariable variable=ACCOUNT_KEY;isOutput=true]$ACCOUNT_KEY"               #echo "##vso[task.setvariable variable=ACCOUNT_KEY;issecret=true;isOutput=true]$ACCOUNT_KEY"</span></strong>            -<span style="color: rgba(0, 0, 0, 1)"> job: same_stage_echo<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: azure_cli_script      variables:        ACCOUNT_KEY: $[dependencies.azure_cli_script.outputs[</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">'output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>      steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">          displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in different jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">          inputs:            targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">            script:</span>|<span style="color: rgba(0, 0, 0, 1)">              #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong>  -<span style="color: rgba(0, 0, 0, 1)"> stage: echo_varibale<strong><span style="color: rgba(255, 0, 0, 1)">dependsOn: script   jobs:</span></strong></span><strong><span style="color: rgba(255, 0, 0, 1)">- job: different_stage_echo       variables:         ACCOUNT_KEY: $[stageDependencies.script.azure_cli_script.outputs['output_variable.ACCOUNT_KEY'</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">]]</span></strong>       steps:</span>- task: Bash@<span style="color: rgba(128, 0, 128, 1)">3</span><span style="color: rgba(0, 0, 0, 1)">           displayName:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Bash :output temporary variables in same jobs on the same stage</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">           inputs:             targetType:</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">inline</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">             script:</span>|<span style="color: rgba(0, 0, 0, 1)">               #</span><span style="color: rgba(0, 0, 255, 1)">echo</span><span style="color: rgba(0, 0, 0, 1)"> ACCOUNT_KEY</span><strong><span style="color: rgba(255, 0, 0, 1)">echo "ACCOUNT_KEY is $ACCOUNT_KEY"</span></strong></pre> </div> <p><span style="color: rgba(255, 102, 0, 1)"><strong>*****重点*****：管道内变量与动态临时变量使用区别</strong></span></p> <p><span style="color: rgba(255, 102, 0, 1)"><strong>Pipeline 管道内使用方式：$(变量名称)</strong></span></p> <p><span style="color: rgba(255, 102, 0, 1)"><strong>动态临时变量使用方式：$变量名称</strong></span></p> <h3>配置 Pipeline 管道变量</h3> <p>使用 Azure CLI 创建 Azure Storage Account、Azure Key Vault 的内联脚本中使用管理内变量控制参数</p> <table border="0"> <tbody> <tr> <td><span style="color: rgba(0, 0, 255, 1)"><strong><span style="background-color: rgba(255, 255, 255, 1)">变量名</span></strong></span></td> <td><span style="color: rgba(0, 0, 255, 1)"><strong><span style="background-color: rgba(255, 255, 255, 1)">变量值</span></strong></span></td> </tr> <tr> <td>terraform_rg</td> <td>Web_Test_TF_RG</td> </tr> <tr> <td>storage_account</td> <td>cnbatetfstorage</td> </tr> <tr> <td>storage_account_container</td> <td>tf-state</td> </tr> <tr> <td>keyvault</td> <td>cnbate-terraform-kv</td> </tr> <tr> <td>keyvault_sc</td> <td>terraform-stste-storage-key</td> </tr> <tr> <td>container_key</td> <td>cnbate.tf.stats</td> </tr> </tbody> </table> <h3>运行 Pipeline，查看配置输出</h3> <p>由于我们已经在 azure-pipelines-1.yaml 文件中指定了工作分支 “remote_stats”，当我们只要触发 “remote_stats” 分支的 “push” 或者 “pull_request” 动作都会触发 Azure DevOps Pipeline 的运行。</p> <p><strong>相同 stage 内的 job 输出</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e0e954a6d0cd4710f24f96553a5e4e35.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <p><strong>不同 stage 的 job 输出</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c84cbd4ebade466e0781853e7967c3fd.jpg" alt="Azure Terraform（十一）Azure DevOps Pipeline 内的动态临时变量的使用"></p> <h3>总结</h3> <p>本期实验，我们学习了如何在&nbsp;Azure DevOps Pipeline 运行期间创建的动态临时变量以及变量的输出，使得我们更加灵活的在任意 job 中声明自定义的动态临时变量，并将动态临时变量应用到任意的 job 中，这种方式有区别与Pipeline 管道内变量，尤其是在定义阶段和使用语法上，详细内容参考官方文档。</p> <p>在脚本中设置变量：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/en-us/azure/devops/pipelines/process/set-variables-scripts?WT.mc_id=AZ-MVP-5004191"  target="_blank" rel="nofollow">https://docs.microsoft.com/en-us/azure/devops/pipelines/process/set-variables-scripts</a></p> <p>github 代码地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/yunqian44/Terraform_Cnbate_Traffic_Manager"  target="_blank" rel="nofollow">https://github.com/yunqian44/Terraform_Cnbate_Traffic_Manager</a></p> <p>Terraform 在 Azure DevOps 中的使用系列：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/AllenMaster/category/1876925.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/AllenMaster/category/1876925.html</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-24212.htm">启动zookeeper、kafka报错，sudo java未找到</a></p>
                                        <p>下一个：<a href="/news/article-24676.htm">vue中v-model的三种修饰符:lazy,numer,trim</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-28-node-share.htm" title="10月28日 | Surge Mac每天更新22.2M/S免费节点订阅链接">10月28日 | Surge Mac每天更新22.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-25-free-node-subscribe.htm" title="9月25日 | Surge Mac每天更新22M/S免费节点订阅链接">9月25日 | Surge Mac每天更新22M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-7-today-surge-node.htm" title="8月7日 | Surge Mac每天更新22.5M/S免费节点订阅链接">8月7日 | Surge Mac每天更新22.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20989.htm" title="聊城宠物店洗澡收费标准（一般的宠物店洗澡多少钱）">聊城宠物店洗澡收费标准（一般的宠物店洗澡多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-13-free-node-subscribe.htm" title="8月13日 | Surge Mac每天更新18M/S免费节点订阅链接">8月13日 | Surge Mac每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-14-surge-node-github.htm" title="10月14日 | Surge Mac每天更新21.1M/S免费节点订阅链接">10月14日 | Surge Mac每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-25599.htm" title="java计算器页面的实现">java计算器页面的实现</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-latest-surge-node.htm" title="11月30日 | Surge Mac每天更新19.9M/S免费节点订阅链接">11月30日 | Surge Mac每天更新19.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22825.htm" title="动物防疫站打狂犬疫苗要钱吗多少钱一次（给动物打狂犬疫苗多少钱一针）">动物防疫站打狂犬疫苗要钱吗多少钱一次（给动物打狂犬疫苗多少钱一针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-26-today-surge-node.htm" title="8月26日 | Surge Mac每天更新18.3M/S免费节点订阅链接">8月26日 | Surge Mac每天更新18.3M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">1</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- End Features Area -->
        <!-- Start Footer Area -->
    <footer class="footer">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>Surge Mac免费节点分享站 版权所有 Powered by WordPress</p>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top btn-hover">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/surgemac/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/wow.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/surgemac/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/surgemac/main.js"></script>
    <script type="text/javascript">
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });

    //====== Clients Logo Slider
    tns({
        container: '.client-logo-carousel',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 15,
        nav: false,
        controls: false,
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 2,
            },
            768: {
                items: 3,
            },
            992: {
                items: 4,
            },
            1170: {
                items: 6,
            }
        }
    });

    //======== Home Slider
    var slider = new tns({
        container: '.home-slider',
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: true,
        controls: false,
        controlsText: [
            '<i class="lni lni-arrow-left prev"></i>',
            '<i class="lni lni-arrow-right next"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });

    //======== Testimonial Slider
    var slider = new tns({
        container: '.testimonial-slider',
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: true,
        controls: false,
        controlsText: [
            '<i class="lni lni-arrow-left prev"></i>',
            '<i class="lni lni-arrow-right next"></i>'
        ],
        responsive: {
            1200: {
                items: 2,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });

    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>